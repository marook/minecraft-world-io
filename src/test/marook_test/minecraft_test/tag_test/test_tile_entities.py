#!/usr/bin/env python
#
# Copyright 2011 Markus Pielmeier
#
# This file is part of minecraft-world-io.
#
# minecraft-world-io is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# minecraft-world-io is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with minecraft-world-io.  If not, see <http://www.gnu.org/licenses/>.
#


import unittest
from marook.minecraft.tag.tile_entities import SignParser
from marook.minecraft.tag.tile_entities import ChestParser
import StringIO

class SignParserTest(unittest.TestCase):
    
    def testParseSign(self):
        data = [
            '\x00\x01\x7a\x00\x00\x00\x12\x08\x00\x05\x54\x65\x78\x74\x34\x00\x00\x08\x00\x05\x54\x65\x78\x74\x32\x00\x09\x35\x2a\x36\x34\x20\x2b\x20\x33\x34\x08\x00\x05\x54\x65\x78\x74\x31\x00\x0a\x30\x20\x62\x69\x73\x20\x65\x6e\x64\x65\x03\x00\x01\x79\x00\x00\x00\x24\x08\x00\x05\x54\x65\x78\x74\x33\x00\x08\x53\x63\x68\x69\x65\x6e\x65\x6e\x03\x00\x01\x78\x00\x00\x00\x19\x08\x00\x02\x69\x64\x00\x04\x53\x69\x67\x6e\x00',
            '\x00\x01\x7a\x00\x00\x00\x12\x08\x00\x05\x54\x65\x78\x74\x34\x00\x00\x08\x00\x05\x54\x65\x78\x74\x32\x00\x09\x35\x2a\x36\x34\x20\x2b\x20\x33\x34\x08\x00\x05\x54\x65\x78\x74\x31\x00\x0a\x30\x20\x62\x69\x73\x20\x65\x6e\x64\x65\x03\x00\x01\x78\x00\x00\x00\x19\x08\x00\x05\x54\x65\x78\x74\x33\x00\x08\x53\x63\x68\x69\x65\x6e\x65\x6e\x03\x00\x01\x79\x00\x00\x00\x24\x08\x00\x02\x69\x64\x00\x04\x53\x69\x67\x6e\x00'
            ]

        for d in data:
            f = StringIO.StringIO(d)

            sp = SignParser()

            s = sp.readEntity(f)

            self.assertEqual(25, s.x)
            self.assertEqual(36, s.y)
            self.assertEqual(18, s.z)
            self.assertEqual(['0 bis ende', '5*64 + 34', 'Schienen', ''], s.text)

class ChestParserTest(unittest.TestCase):

    def testParseChest(self):
        f = StringIO.StringIO('\x00\x05\x49\x74\x65\x6d\x73\x0a\x00\x00\x00\x08\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x00\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x01\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x09\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x0a\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x0b\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x12\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x13\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x02\x00\x06\x44\x61\x6d\x61\x67\x65\x00\x00\x01\x00\x04\x53\x6c\x6f\x74\x14\x01\x00\x05\x43\x6f\x75\x6e\x74\x40\x02\x00\x02\x69\x64\x00\x04\x00\x03\x00\x01\x7a\x00\x00\x00\x0b\x03\x00\x01\x79\x00\x00\x00\x0d\x03\x00\x01\x78\x00\x00\x00\x11\x08\x00\x02\x69\x64\x00\x05\x43\x68\x65\x73\x74\x00' + 'EndToken')

        cp = ChestParser()

        c = cp.readEntity(f)

        self.assertEqual('EndToken', f.read(8))
